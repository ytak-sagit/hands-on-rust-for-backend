name: Run Unit Test for Rust

run-name: Run Unit Test for Rust

on: push

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest

    outputs:
      projects: ${{ steps.extract_rust_projects.outputs.projects }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Rust Projects
        id: extract_rust_projects
        run: |
          projects=$(jq -c '.["rust-analyzer.linkedProjects"][] | split("/") | .[0]' .vscode/settings.json | jq -s -c '{ "projects": . }')
          echo "projects=${projects}" > "${GITHUB_OUTPUT}"

  unit-test:
    runs-on: ubuntu-latest

    needs: [setup]

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup.outputs.projects) }}

    defaults:
      run:
        working-directory: ${{ matrix.projects }}

    env:
      CARGO_TERM_COLOR: always
      RUSTFLAGS: "-Dwarnings"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust caching
        uses: Swatinem/rust-cache@2

      - name: Run unit test
        run: cargo test --verbose
